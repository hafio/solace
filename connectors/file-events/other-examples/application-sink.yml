server:
  port: 8083
spring:
  application:
    name: File Events Connector(Sink)
  cloud:
    stream:        
      bindings:
        input-0:
          destination: q.file.event.queue
          binder: solace
        output-0:
          #destination: ${header(DEST_FILE_NAME)}
          destination: D:\tmp\uploads\sink\${header(scst_file_name)}
          #/home/path/to/files/file-${UMAP(solace_priority)}-${DATE(%1$tY%1$tm%1$td)}-${topic(2)}-${topic(-2)}-${HEADER(solace_discardIndication)}-${topic_e(0)}-${AUTO_INCREMENT}.txt
          binder: file-events
file-events:
  sink:
    general:
      miID: SINK_CONN_ID1
      storeBackupStateRemotely: false
      state_backup_path: ./backup_state.cfg
    advanced:
      maxEventsPerFile: 0  # Default value 0 (unlimited). Maximum events allowed to be written in a file. To respect this, destination file name must include dynamic fields such as ${AUTO_INCREMENT} or any header parameter for successful rollover to a new file. If not configured properly, same file will be appended as a result.
      maxFileSize: 0  # Default value 0 (unlimited). Maximum file size in bytes allowed. To respect this, destination file name must include dynamic fields such as ${AUTO_INCREMENT} or any header parameter for successful rollover to a new file. If not configured properly, same file will be appended as a result.
      checkDynamicFileNameChangesEverytime: false  # Default value false. If set to true, on every new event will check if file name changes are required. For example if a date is present in the file name. Or a Header which is expected to change often.
      #escapeCharsRegex: "[/]"  # Works if variable categories are used as ${UMAP_E(<>)}, ${TOPIC_E(<>)}, ${DATE_E(<>)}, ${HEADER_E(<>)}
      #escapeCharsReplacement: "hh"  # Default Value "@". Only works when escapeCharsRegex is configured
      ignoreEmptyEvents: true  # Default value true. If set to false, need to provide value for emptyEventsSubstitute.
      #emptyEventsSubstitute: "DUMMY_EVENT" # Doesn't work if ignoreEmptyEvents is set to true OR if empty event is a file close trigger event
      preventDuplicateEvents: false  # Default value false. If set to true duplicate events will be ignored. Max events in Duplicate check cache 260.
      preventDuplicateOnlyForRedeliveredEvents: true  # Default value true. If set to true duplicate key will only be checked for Redeliverd events. If false, will be checked for all events. Used only when preventDuplicateEvents set to true. 
      uniqueEventIdentifyingHeader: "${header(DEST_FILE_NAME)}-${HEADER(EVENT_NO)}"  # Used only when preventDuplicateEvents set to true. If value is set, will be treated as duplicate check key if not then complete payload will be set as Duplicate key 
      closeFileTriggerHeaderName: "EVENT_TYPE"  # If value is set, File will be closed if this header field exists in the event. Works in combination with closeFileTriggerHeaderValue
      closeFileTriggerHeaderValue: "FILE_COMPLETE"  # Default value "". Works if value of closeFileTriggerHeaderName is set. File will be closed if set to "*" OR specific value configured matches the exact string value with the event header 
      ignorePayloadOfCloseTriggerEvent: true # Default Value false. If set to true any payload present in the trigger event will not be written to file. Works in combination with closeFileTriggerHeaderName and closeFileTriggerHeaderValue
      #ignoreWritingPayloadOfAllEvents: false # Default Value false. If set to true any payload present in the event will not be written to file. Will make sense to use if only headers or dynamic parameters need to be written to the destination file using prependToEvents or appendToEvents options.
    #pre_process:
      #prependToFile: "<xml>"
      #prependToFirstEvent: "<event><event_no>1</event_no><timestamp>${DATE(%1$tF %1$tT.%1$tL)}ms</timestamp><message>"  #Only gets added before the first event. Helps to manage creation of specific file formats such as JSON.
      #prependToEvents: "<event><event_no>${AUTO_INCREMENT}</event_no><timestamp>${DATE(%1$tF %1$tT.%1$tL)}ms</timestamp><message>"  #Gets added before all events. Would be ignored for first event if prependToFirstEvent parameter is configured 
    #post_process:
      #appendToEvents: "</message></event>"
      #appendToFile: "</xml>"
    gcs:
      enabled: false
      projectId: GCS_PROJECT_ID
      credentialsFilePath: /home/centos/pubsubplus-connector-file-events-2.0.0/configs/gcs/creds.json
      retrySettings:
        maxAttempts: 5
        retryDelayMultiplier: 3.0
        maxDurationMinutes: 2
    sftp_settings:
      enabled: false
      ip: SFTP_HOST_ADDRESS
      port: 22
      user: SFTP_USER
      password: SFTP_PASSWORD
      strictHostKeyChecking: no
      #privateKeyPath: /home/centos/.ssh/id_rsa
    ftp_settings:
      enabled: false
      ip: FTP_HOST_ADDRESS
      port: 21
      user: FTP_USER
      password: FTP_PASSWORD
      secured: true
      localPassiveMode: false
    file_mesh_manager:
      enabled: false
      useOutputDestinationSolaceCredentials: true
      solace_base_publish_topic: solace/dd/STORE-MANGEMENT/fa-assembler/cc/se/fa/assembler/Frankfurt
      solace_messaging_mode: PERSISTENT
      heartbeat_enabled: false
      heartbeat_interval: 3
      solace_base_publish_topic_heartbeat: solace/dd/STORE-MANGEMENT/fa-assembler/cc/se/fa/assembler/Frankfurt
      events:
        fileStart: true
        fileComplete: true
solace:
  connector:
    security:
      enabled: false
    error:
      handle: stop_all
    workflows:
      0:
        enabled: true
        acknowledgment:
          publish-async: true
    management:
      leader-election:
        mode: standalone  # The connectorâ€™s leader election mode. (values: standalone, active_active, active_standby)
        fail-over:
          max-attempts: 3  # The maximum number of attempts to perform a fail-over.
          back-off-initial-interval: 1000  # The initial interval (milliseconds) to back-off when retrying a fail-over.
          back-off-max-interval: 10000  # The maximum interval (milliseconds) to back-off when retrying a fail-over.
          back-off-multiplier: 2.0  # The multiplier to apply to the back-off interval between each retry of a fail-over.
      queue: management-queue-file-sink  # The management queue name.
      session: # The management session. This has the same interface as that used by `solace.java.*`. For more info: https://github.com/SolaceProducts/solace-spring-boot/tree/master/solace-spring-boot-starters/solace-java-spring-boot-starter#updating-your-application-properties
        host: tcp://127.0.0.1:55555
        msg-vpn: default
        client-username: user1
        client-password: 123456
  java:
    host: tcp://127.0.0.1:55555
    msg-vpn: default
    client-username: user1
    client-password: 123456
    connectRetries: -1
    reconnectRetries: -1
logging:  # Logging configuration. For more info: https://docs.spring.io/spring-boot/docs/current/reference/html/features.html#features.logging
  level:
    root: INFO
    # com.solace.connector.jms: TRACE # Enables TRACE logs for connector
    # com.solace.connector.core: TRACE # Enables TRACE logs for connector framework
    com.solace.spring.cloud.stream.binder: TRACE # Enables TRACE logs for Solace and JMS binders
    com.solacecoe.spring.cloud.stream.binders.file_events: TRACE # Enables TRACE logs for Solace and JMS binders
  file:
    name: myapp.log  # base log file name
  logback:
    rollingpolicy:  # Logback file rolling policy
      file-name-pattern: "${LOG_FILE}.%d{yyyy-MM-dd}.%i.gz"  # Pattern for rolled-over log file names. Example: Rolls the log file into an archive once every day. `%i` is reset to `0` at the start of the day.
      max-file-size: 100MB  # The maximum size of log file before it is archived. Example: Within a given day, when the log file reaches 100 MB, archive it, and increment `%i`.
      max-history: 7  # The maximum rotation-period's worth of archive log files to keep. Example: Since the `file-name-pattern` is configured to rollover once every day, keep 7 days worth of log archives.
      total-size-cap: 1GB  # Total size of log backups for a given rotation period. Example: Keep up-to 1 GB of log archives for every day.
management:
  security:
    enabled: false
  endpoints:
    web:
      exposure:
        include: "health,metrics,loggers,logfile,channels,env,workflows,leaderelection,bindings"
  simple:
    metrics:
      export:
        enabled: true
  endpoint:
    logfile:
      external-file: myapp.log
    prometheus:
      enabled: false
    health:
      show-details: ALWAYS
      status:
        # Change default order so that RECONNECTING takes precedence over UP and UNKNOWN
        order:
          - DOWN
          - OUT_OF_SERVICE
          - RECONNECTING
          - UP
          - UNKNOWN
