server:
  port: 8082
spring:
  application:
    name: File Events Connector(Source)
  cloud:
    stream:        
      bindings:
        input-0:
          destination: D:\tmp\File-Event\pubsubplus-connector-file-events-2.0.0-source\samples\config\directory-paths.cfg
          binder: file-events
        output-0:
          destination: solace/connector/file/events/source/test
          binder: solace
file-events:
  source:
    scheduler:
      restart_time_sec: 0
    general:
      miID: SRC_FILE_EVENTS_S1
      file_type: 1
      state_backup_path: backup_state.txt
      copy_file_mode_permissions: 0
      max_files_allowed: 99999
    data_events:
      connectorStartEvent: false
      connectorCompleteEvent: false
      fileStartEvent: false
      fileCompleteEvent: true
    advanced:
      fileFormat: 1
      #eventDelimiter: '|' 
      paramDelimiter: ','
      #dynamicTopic: solace/fc/source/test/dynamic/${param-3}/${param-4}/${event_no}/${param-4}
      #paramHeaderMap: event_no,connector,col3,new_param,message
      sendDelimitedEventPayloadAsBinary: false
      #jsonPath: '$.Authors[*].Books[*]'
      #xPath: '/class/student'
    directory_wildcard:
      wildcard_type: 0
      #config_path: /home/centos/pubsubplus-connector-file-events-2.0.0/configs/dir_regexps.cfg
    directory_replication:
      start_time: -1
    solace_out:
      lvq: q.file.connector.lvq
      destination: solace/connector/file/events/source/test/checkpoint
    file_mesh_manager:
      enabled: false
      useOutputDestinationSolaceCredentials: true
      heartbeat_enabled: false
      heartbeat_interval: 5
      solace_base_publish_topic_heartbeat: manager/dd/STORE-MANGEMENT/fc-source/cc/se/fc/source/Stockholm
      solace_base_publish_topic: manager/dd/STORE-MANGEMENT/fc-source/cc/se/fc/source/Stockholm
      solace_messaging_mode: PERSISTENT
      events:
        fileStart: true
        fileComplete: true
solace:
  connector:
    security:
      enabled: false
    error:
      handle: stop_all
    workflows:
      0:
        enabled: true
        acknowledgment:
          publish-async: true
        transform:
          enabled: true
          expressions:
            - transform: "target['payload'] = {:}"
            - transform: "target['payload']['eda-body'] = {:}"
            - transform: "target['payload']['eda-body']['operation'] = source['payload']['type']"
            - transform: "target['payload']['eda-body']['cdc-payload'] = {:}"
            - transform: "target['payload']['eda-body']['cdc-payload']['Vessel_Record_Id'] = source['payload']['Vessel_Record_Id']"
            - transform: "target['payload']['eda-header'] = {:}"
            - transform: "target['payload']['eda-header']['tracking-id'] = source['payload']['message']['headers']['changeSequence']"
    management:
      leader-election:
        mode: standalone  # The connectorâ€™s leader election mode. (values: standalone, active_active, active_standby)
        fail-over:
          max-attempts: 3  # The maximum number of attempts to perform a fail-over.
          back-off-initial-interval: 1000  # The initial interval (milliseconds) to back-off when retrying a fail-over.
          back-off-max-interval: 10000  # The maximum interval (milliseconds) to back-off when retrying a fail-over.
          back-off-multiplier: 2.0  # The multiplier to apply to the back-off interval between each retry of a fail-over.
      queue: management-queue-file-source  # The management queue name.
      session: # The management session. This has the same interface as that used by `solace.java.*`. For more info: https://github.com/SolaceProducts/solace-spring-boot/tree/master/solace-spring-boot-starters/solace-java-spring-boot-starter#updating-your-application-properties
        host: tcp://127.0.0.1:55555
        msg-vpn: default
        client-username: user1
        client-password: 123456
  java:
    host: tcp://127.0.0.1:55555
    msg-vpn: default
    client-username: user1
    client-password: 123456
    connectRetries: -1
    reconnectRetries: -1
logging:  # Logging configuration. For more info: https://docs.spring.io/spring-boot/docs/current/reference/html/features.html#features.logging
  level:
    root: INFO
    com.solace.connector.jms: TRACE # Enables TRACE logs for connector
    com.solace.connector.core: TRACE # Enables TRACE logs for connector framework
    com.solace.spring.cloud.stream.binder: TRACE # Enables TRACE logs for Solace and JMS binders
    com.solacecoe.spring.cloud.stream.binders.file_events: TRACE # Enables TRACE logs for Solace and JMS binders
  file:
    name: myapp.log  # base log file name
  logback:
    rollingpolicy:  # Logback file rolling policy
      file-name-pattern: "${LOG_FILE}.%d{yyyy-MM-dd}.%i.gz"  # Pattern for rolled-over log file names. Example: Rolls the log file into an archive once every day. `%i` is reset to `0` at the start of the day.
      max-file-size: 100MB  # The maximum size of log file before it is archived. Example: Within a given day, when the log file reaches 100 MB, archive it, and increment `%i`.
      max-history: 7  # The maximum rotation-period's worth of archive log files to keep. Example: Since the `file-name-pattern` is configured to rollover once every day, keep 7 days worth of log archives.
      total-size-cap: 1GB  # Total size of log backups for a given rotation period. Example: Keep up-to 1 GB of log archives for every day.
management:
  security:
    enabled: false
  endpoints:
    web:
      exposure:
        include: "health,metrics,loggers,logfile,channels,env,workflows,leaderelection,bindings"
  simple:
    metrics:
      export:
        enabled: true
  endpoint:
    logfile:
      external-file: myapp.log
    prometheus:
      enabled: false
    health:
      show-details: ALWAYS
      status:
        # Change default order so that RECONNECTING takes precedence over UP and UNKNOWN
        order:
          - DOWN
          - OUT_OF_SERVICE
          - RECONNECTING
          - UP
          - UNKNOWN
